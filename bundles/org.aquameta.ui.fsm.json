{
    "blobs": [
        {
            "hash": "\\x654a0551af9499fe6f4294a5532056077262972aad1637ffafc4c52925de263a",
            "value": "94100e78-6951-4a48-9463-59f5bd623aeb"
        },
        {
            "hash": "\\x0dd8fd2db084d3adc9ff3e1a7c9efce463b51228c36eb104ee234ef7ff0d92fe",
            "value": "2923c1fa-4641-4550-b338-888a9135df7c"
        },
        {
            "hash": "\\xb1b1bdb480c61d075300d9bff7d9cb69cf31695ea048e478facadf426e8d0fb0",
            "value": "link"
        },
        {
            "hash": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
            "value": null
        },
        {
            "hash": "\\xbc020a35b7f9cb1382e7b534c68e3c531d849b119bf14f75ddead6cc45c3ccc1",
            "value": "machine"
        },
        {
            "hash": "\\x443efbf4b66c17e782678c79e1d3c7a8b2bf81cfbda1b82101a2ced790daf86d",
            "value": ".{{= name }} {\n    background-color: #777;\n    width: 500px;\n    color: black;\n    font-size: 50%;\n    clear: both;\n}\n\n.{{= name }} li.error {\n    color: red;\n}\n"
        },
        {
            "hash": "\\x1cd39345d708504047d2acbbee912d43977b63378b73408b54f7b93e7892adc7",
            "value": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n\n        <title>Aquameta</title>\n        <script src='/system.js'></script>\n        \n        <!--semantic ui + themes + style switcher -->\n        \n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\">\n        <script type=\"text/javascript\" src=\"/assets/js/styleswitcher.js\"></script>\n        \n        <!-- for documentation manager -->\n\t    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/8.4.2/markdown-it.min.js\"></script>\n        \n        <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width\">\n    </head>\n    <body></body>\n    <script>\n        System.import('/widget.js').then(function(widget) {\n            System.import('/semantic.min.js').then(function(s) {\n\n                var db = new AQ.Database('/endpoint/0.2', { evented: 'no' });\n                window.endpoint = db;\n\n                AQ.Widget.import('com.aquameta.datasphere', 'sphere', db);\n                AQ.Widget.import('org.aquameta.core.ide', 'ide', db);\n                AQ.Widget.import('org.aquameta.ui.p2p', 'p2p', db);\n                AQ.Widget.import('org.aquameta.ui.auth', 'auth', db);\n                AQ.Widget.import('org.aquameta.ui.layout', 'layout', db);\n                AQ.Widget.import('org.aquameta.ui.tags', 'tag', db);\n                AQ.Widget.import('org.aquameta.ui.fsm', 'f', db);\n\n                $('body').append(widget('f:machine'));\n                $('body').append(widget('ide:debugger3_manager'));\n\n            });\n        });\n    </script>\n</html>\n\n"
        },
        {
            "hash": "\\x51c80c394df96d89e95a40b0a0416354788a8bef726957678ac619c80c73ab68",
            "value": "            // state machine\n            var machine = {\n                id: 'MAIN_MACHINE',\n                states: {\n                    home: {\n                        // widget\n                        f: function() { return widget('gtr:home'); },\n                        // permitted transitions\n                        t: ['allegate','respond','browse','search']\n                    },\n                    allegate: {\n                        f: function() { return widget('gtr:allegate'); },\n                        t: ['home']\n                    },\n                    allegations: {\n                        f: function() { return widget('gtr:allegations'); }\n                    },\n                    person: {\n                        f: function() { return widget('gtr:person'); }\n                    },\n                    search: {\n                        f: function() { return widget('gtr:search'); }\n                    },\n                    about: {\n                        f: function() { return widget('gtr:about'); }\n                    }\n                },\n                start_state: 'home',\n                // interface widgets must contain a .interface element, where state widgets ^^ will be plonked\n                interface_widget: function(content) { return widget('gtr:main_tmpl', { content: content }) }\n            };"
        },
        {
            "hash": "\\x5e411a1d7d1b25fca9378775c4b0bb9085555466cc20ee2584bc97d624a252c0",
            "value": ".{{= name }} {\n    text-decoration: underline;\n    cursor: pointer;\n    \n}"
        },
        {
            "hash": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
            "value": ""
        },
        {
            "hash": "\\x0319f1fb332d7c9f192d497b5c577e8d9b1f48eb519cae6355da9090ff567de1",
            "value": "<div id=\"{{= id }}\" class=\"{{= name }}\">\n    <h1>Sample Template!</h1>\n    <p>You can put all kinds of content above and below the .interface element.</p>\n\n    <div class='interface'>{{= content }}</div>\n    \n    <p>This content will not change when the state changes, only the contents of the .interface element.</p>\n\n</div>"
        },
        {
            "hash": "\\xb5bea41b6c623f7c09f1bf24dcae58ebab3c0cdd90ad966bc43a45b44867e12b",
            "value": "true"
        },
        {
            "hash": "\\x09731392a154b538e3d7c0d697b79c34a2202bf7cef01f02a9e627ad642842c4",
            "value": "b9ebd6bb-d737-498d-87f3-44791ad147d6"
        },
        {
            "hash": "\\x638ac2e5e63626ab33ca6b3d36a855ec7eafcae1bb3b3504d159072892d962c2",
            "value": "sample_tmpl"
        },
        {
            "hash": "\\x8c4a55cd627616e21a6e7a9190bd7b42b84174d02158f743552517eb08eece48",
            "value": "<a id=\"{{= id }}\" class=\"{{= name }}\">{{= content }}</a>"
        },
        {
            "hash": "\\x080ffad26f829a3705faca863af89a35f851b956c94c4baa76f0b06c03b0a65a",
            "value": "var w = $(\"#\"+id);\n\nif (typeof params == 'undefined')\n    params = {};\n\nw.click(function() {\n    w.trigger('state_change', { state_id: state_id, params: params });\n});"
        },
        {
            "hash": "\\xf5561cfb0a710062a28362c7c8226390176bc4434023b6cd9201a16709b9cfc8",
            "value": ".{{= name }} {\n    clear: both;\n}"
        },
        {
            "hash": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
            "value": "return {};"
        },
        {
            "hash": "\\x0d6e4079e36703ebd37c00722f5891d28b0e2811dc114b129215123adcce3605",
            "value": "main"
        },
        {
            "hash": "\\x349dc990464bf72ea6f20b74da3bdf7254713f27247b299972b6d841fb2826e7",
            "value": "<div id=\"{{= id }}\" class=\"{{= name }}\">\n    <div class='interface_container'></div>\n    <div class='status'></div>\n</div>"
        },
        {
            "hash": "\\xc3e2d78f3ff335724b4029f06505b511e4f8f01e258828de29849b36b40b55d0",
            "value": "button"
        },
        {
            "hash": "\\x94483d966b6a0c4167448acfabe47efbb05ae59d68e977d2db91d001ac116a08",
            "value": "d8750749-46ba-411b-8b15-f5e06c845f1c"
        },
        {
            "hash": "\\x4edaedda78d8053b29df26a82c943e476d352d5db7fd21770212b2b08370dbaf",
            "value": "e1ced48e-1c93-4af9-8522-c7d1a31408e5"
        },
        {
            "hash": "\\x8178ae6ac6f0182c3b64737dc423133c15dfce730f67e3b303388af3272670df",
            "value": ".{{= name }} .interface {\n    border: 2px dotted red;\n}"
        },
        {
            "hash": "\\xb999f70922c530fe3ced9bd849c67788bc387e3d8bf941a6bfd820c1b47fa1bc",
            "value": "machine_status"
        },
        {
            "hash": "\\xa8ae5aa90a94d908fc7ab35b18702a301e9378f83386f49d4b1dc63c0502a34f",
            "value": "<div id=\"{{= id }}\" class=\"{{= name }}\">\n</div>"
        },
        {
            "hash": "\\x0ba9b693da6b2dbb83cee744e953ac5cb5f3d2cb93a4a0550b607a7fdcca02c2",
            "value": ".{{= name }} {\n}"
        },
        {
            "hash": "\\xdd2741e2734916143a6dbf1d1939cbc04396f10356faf54aba282066cec41b5f",
            "value": "944b5a05-be70-45a1-a549-1301d38799e4"
        },
        {
            "hash": "\\x6f79a2d3c8c985123450d6e824aed332d689ce921686b8dd87987f9f78dec1d1",
            "value": "sample_machine.js"
        },
        {
            "hash": "\\xf13bbad0d674b460ef96e81f31ed8395ca698bcc32db72a64df47f7e9a0944a9",
            "value": "<div id=\"{{= id }}\" class=\"{{= name }}\">\n    \n</div>"
        },
        {
            "hash": "\\xa9c9db433a2ebae74468dbfde36af7f65090c94824f7b53c6be1cd287d245e23",
            "value": "var w = $(\"#\"+id);\n\nif (typeof params == 'undefined')\n    params = {};\n\nw.click(function( e ) {\n    e.preventDefault();\n    w.trigger('state_change', { state_id: state_id, params: params });\n});\n"
        },
        {
            "hash": "\\x364b09e448e9122afb88076f1ddcf02a1628711a37461b834f3510962871e00f",
            "value": "var w = $(\"#\"+id);\n\n// TODO: make this a dependency_js\n\n/*\n  jQuery deparam is an extraction of the deparam method from Ben Alman's jQuery BBQ\n  https://github.com/AceMetrix/jquery-deparam\n\n*/\n(function(deparam){\n    if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n        try {\n            var jquery = require('jquery');\n        } catch (e) {\n        }\n        module.exports = deparam(jquery);\n    } else if (typeof define === 'function' && define.amd){\n        define(['jquery'], function(jquery){\n            return deparam(jquery);\n        });\n    } else {\n        var global;\n        try {\n          global = (false || eval)('this'); // best cross-browser way to determine global for < ES5\n        } catch (e) {\n          global = window; // fails only if browser (https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives)\n        }\n        global.deparam = deparam(global.jQuery); // assume jQuery is in global namespace\n    }\n})(function ($) {\n    var deparam = function( params, coerce ) {\n        var obj = {},\n        coerce_types = { 'true': !0, 'false': !1, 'null': null };\n\n        // If params is an empty string or otherwise falsy, return obj.\n        if (!params) {\n            return obj;\n        }\n\n        // Iterate over all name=value pairs.\n        params.replace(/\\+/g, ' ').split('&').forEach(function(v){\n            var param = v.split( '=' ),\n            key = decodeURIComponent( param[0] ),\n            val,\n            cur = obj,\n            i = 0,\n\n            // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\n            // into its component parts.\n            keys = key.split( '][' ),\n            keys_last = keys.length - 1;\n\n            // If the first keys part contains [ and the last ends with ], then []\n            // are correctly balanced.\n            if ( /\\[/.test( keys[0] ) && /\\]$/.test( keys[ keys_last ] ) ) {\n                // Remove the trailing ] from the last keys part.\n                keys[ keys_last ] = keys[ keys_last ].replace( /\\]$/, '' );\n\n                // Split first keys part into two parts on the [ and add them back onto\n                // the beginning of the keys array.\n                keys = keys.shift().split('[').concat( keys );\n\n                keys_last = keys.length - 1;\n            } else {\n                // Basic 'foo' style key.\n                keys_last = 0;\n            }\n\n            // Are we dealing with a name=value pair, or just a name?\n            if ( param.length === 2 ) {\n                val = decodeURIComponent( param[1] );\n\n                // Coerce values.\n                if ( coerce ) {\n                    val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\n                    : val === 'undefined'                       ? undefined         // undefined\n                    : coerce_types[val] !== undefined           ? coerce_types[val] // true, false, null\n                    : val;                                                          // string\n                }\n\n                if ( keys_last ) {\n                    // Complex key, build deep object structure based on a few rules:\n                    // * The 'cur' pointer starts at the object top-level.\n                    // * [] = array push (n is set to array length), [n] = array if n is\n                    //   numeric, otherwise object.\n                    // * If at the last keys part, set the value.\n                    // * For each keys part, if the current level is undefined create an\n                    //   object or array based on the type of the next keys part.\n                    // * Move the 'cur' pointer to the next level.\n                    // * Rinse & repeat.\n                    for ( ; i <= keys_last; i++ ) {\n                        key = keys[i] === '' ? cur.length : keys[i];\n                        cur = cur[key] = i < keys_last\n                        ? cur[key] || ( keys[i+1] && isNaN( keys[i+1] ) ? {} : [] )\n                        : val;\n                    }\n\n                } else {\n                    // Simple key, even simpler rules, since only scalars and shallow\n                    // arrays are allowed.\n\n                    if ( Object.prototype.toString.call( obj[key] ) === '[object Array]' ) {\n                        // val is already an array, so push on the next value.\n                        obj[key].push( val );\n\n                    } else if ( {}.hasOwnProperty.call(obj, key) ) {\n                        // val isn't an array, but since a second value has been specified,\n                        // convert val into an array.\n                        obj[key] = [ obj[key], val ];\n\n                    } else {\n                        // val is a scalar.\n                        obj[key] = val;\n                    }\n                }\n\n            } else if ( key ) {\n                // No value was defined, so set something meaningful.\n                obj[key] = coerce\n                ? undefined\n                : '';\n            }\n        });\n\n        return obj;\n    };\n    if ($) {\n      $.prototype.deparam = $.deparam = deparam;\n    }\n    return deparam;\n});\n\n\n\n\n/*********************************************************\n// machine definition\n\n\n********************************************************/\n\n////////////////// setup machine_states ///////////////////////\n/*\n * the states of all machines on the page, a object whose keys\n * are the ids (a randomly generated string) of the machines,\n * and whose value is an object.\n */\n\nvar machine_states = {};\n\n// does the URL have a states object?\nvar qs = document.URL.split('?')[1];\nif (typeof qs != 'undefined') {\n    machine_states = $.deparam(qs);\n\tconsole.log('we already haz some machines: ', machine_states);\n}\n\n\n// does the states object have a state for this particular machine?\nif (typeof machine_states[machine.id] == 'undefined') {\n    console.log('but we dont have this machine');\n    // setup new state machine\n    machine_states[machine.id] = {\n        state: machine.start_state,\n        params: {}\n    };\n\n\t// \"soft\" redirect to url with this state in it\n    history.pushState({}, 'da name', '?'+$.param(machine_states));\n};\n\n// assign state now that we def have one\nconsole.log('machine_states, $.param(states)', machine_states, $.param(machine_states));\nconsole.log('history', history.state);\n\n\n\nwindow.onpopstate = function(e, o) {\n    console.log('onpopstate ', e, o);\n}\n\n\n\n// show debugger status pane thingy if show_status == true\nif (typeof show_status != 'undefined' && show_status === true) {\n    w.find('.status').html(widget('fsm:machine_status'));\n}\n\n// state change listener\nw.bind('state_change', function(e, o) {\n    var state_id = o.state_id;\n    var params = o.params;\n    console.log('FSM: Transition to '+state_id);\n\n    // check this is a existing state\n    if (typeof machine.states[state_id] == 'undefined') {\n        w.trigger('invalid_state_change', { state_id: state_id });\n        return;\n    }\n\n    // make sure this machine has a .interface element in the interface_widget child widget\n    if (w.find('.interface').length != 1) {\n        console.warn('FSM:  no element .interface for state '+state_id, w.find('.interface'));\n        w.trigger('machine_error', { message: \"No element with class of .interface found.\" });\n        return false;\n    }\n    \n    \n    // change the state\n    console.log('FSM: Changing to state '+state_id);\n    \n    // update machine_states\n    machine_states[machine.id] = {\n        state: state_id,\n        params: params\n    };\n\n    // switch to the state's widget\n    w.find('.interface').html(machine.states[state_id].f());\n    \n    // update history\n    history.pushState({x: 'poop'}, 'da name 2', '?'+$.param(machine_states));\n});\n\n// add our interface pane, passing in callback to fire the start state when finished.\n\nconsole.log('FSM: Firing up machine in state ', machine_states[machine.id]);\nvar start_widget = machine.states[machine_states[machine.id].state].f();\nw.find('.interface_container').html(machine.interface_widget(start_widget));\n\n\n\n\n\n"
        },
        {
            "hash": "\\xe4435ae6748a9d88d0c69197adbaf5006323a1591ef3783884c39a4864a56b6b",
            "value": "<button id=\"{{= id }}\" class=\"{{= name }}\">\n    {{= title }}\n</button>"
        },
        {
            "hash": "\\x24906255c400aa70ce67ec95dc46bfc00fccd3750b480c25072321b15eb52153",
            "value": "b7521e9b-4549-4d7c-9209-1f2e517f80a8"
        },
        {
            "hash": "\\x839779136f82e3517c27b1ac56a219b7c7bf47f7be5e43e800f3398b5be1ae35",
            "value": "c9a058d7-816f-4719-9516-515039f4883a"
        },
        {
            "hash": "\\xa91c3e0f94effd5475e3ea826a58a96da57bbdea39965d9f35b36338738fb1b6",
            "value": "var w = $(\"#\"+id);\n\npost_message('FSM DEBUGGER INITIALIZED');\n\nw.closest('.machine').bind('state_change', function(e,o) {\n\tpost_message('State changed to '+o.state_id);\n});\n\nw.closest('.machine').bind('invalid_state_change', function(e,o) {\n    post_error('No such state as '+o.state_id);\n});\n\nw.closest('.machine').bind('machine_error', function(e,o) {\n    post_error(o.message);\n});\n\n\nfunction post_message(message) {\n    w.append('<li>'+message+'</li>');\n}\n\n\nfunction post_error(message) {\n    w.append('<li class=\"error\">'+message+'</li>');\n}"
        },
        {
            "hash": "\\x9ada540623c4ee901429636ebfcb4afe5ec20497944ac9fbea06035b48cdce54",
            "value": "var w = $(\"#\"+id);\n\n// state machine\nvar machine = {\n    id: 'MAIN_MACHINE',\n    states: {\n        home: {\n            // widget\n            f: function() { return widget('gtr:home'); },\n            // permitted transitions\n            t: ['allegate','respond','browse','search']\n        },\n        allegate: {\n            f: function() { return widget('gtr:allegate'); },\n            t: ['home']\n        },\n        allegations: {\n            f: function() { return widget('gtr:allegations'); }\n        },\n        person: {\n            f: function() { return widget('gtr:person'); }\n        },\n        search: {\n            f: function() { return widget('gtr:search'); }\n        },\n        about: {\n            f: function() { return widget('gtr:about'); }\n        }\n    },\n    start_state: 'home',\n    // interface widgets must contain a .interface element, where state widgets ^^ will be plonked\n    interface_widget: function(content) { return widget('gtr:main_tmpl', { content: content }) }\n};"
        },
        {
            "hash": "\\x7d270f33ce3e58a4baf4c991550bf189eaa80ef6937788542f9a6f30885ab797",
            "value": "/fsm"
        },
        {
            "hash": "\\x6125fb53e2564178f1796bf0429049d5cc220f1fd8f988c28cf58174ccc4b5ee",
            "value": "00765d47-360b-4ca6-a449-fb72ddead330"
        },
        {
            "hash": "\\x4938388f0c68650a2120ab03dfbf8e39b08edca0d086b3c3fd02e84e501a5fab",
            "value": "var w = $(\"#\"+id);"
        },
        {
            "hash": "\\xcb218518c86e9538f54d6562b2d09a2e8a1fd11dbb99b21c08ab600688c10356",
            "value": "0e0f1e42-ad32-4018-b1ca-74cacb29fde4"
        }
    ],
    "commits": [
        {
            "id": "398d58d8-98fe-4b01-b2a2-e66f1b88222b",
            "message": "Initial import from v0.4",
            "parent_id": null,
            "jsonb_rows": [
                "(widget,widget,{id},{94100e78-6951-4a48-9463-59f5bd623aeb})",
                "(widget,widget,{id},{c9a058d7-816f-4719-9516-515039f4883a})",
                "(widget,widget,{id},{e1ced48e-1c93-4af9-8522-c7d1a31408e5})",
                "(widget,widget,{id},{d8750749-46ba-411b-8b15-f5e06c845f1c})",
                "(widget,widget,{id},{b7521e9b-4549-4d7c-9209-1f2e517f80a8})",
                "(widget,widget,{id},{b9ebd6bb-d737-498d-87f3-44791ad147d6})",
                "(endpoint,resource,{id},{2923c1fa-4641-4550-b338-888a9135df7c})",
                "(endpoint,resource,{id},{00765d47-360b-4ca6-a449-fb72ddead330})"
            ],
            "author_name": "Eric Hanson",
            "commit_time": "2025-07-10T01:44:30.232095-06:00",
            "author_email": "eric@aquameta.com",
            "jsonb_fields": {
                "(widget,widget,{id},{94100e78-6951-4a48-9463-59f5bd623aeb})": {
                    "id": "\\x654a0551af9499fe6f4294a5532056077262972aad1637ffafc4c52925de263a",
                    "css": "\\x0ba9b693da6b2dbb83cee744e953ac5cb5f3d2cb93a4a0550b607a7fdcca02c2",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\xa8ae5aa90a94d908fc7ab35b18702a301e9378f83386f49d4b1dc63c0502a34f",
                    "name": "\\x0d6e4079e36703ebd37c00722f5891d28b0e2811dc114b129215123adcce3605",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\x9ada540623c4ee901429636ebfcb4afe5ec20497944ac9fbea06035b48cdce54",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(widget,widget,{id},{b7521e9b-4549-4d7c-9209-1f2e517f80a8})": {
                    "id": "\\x24906255c400aa70ce67ec95dc46bfc00fccd3750b480c25072321b15eb52153",
                    "css": "\\x443efbf4b66c17e782678c79e1d3c7a8b2bf81cfbda1b82101a2ced790daf86d",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\xf13bbad0d674b460ef96e81f31ed8395ca698bcc32db72a64df47f7e9a0944a9",
                    "name": "\\xb999f70922c530fe3ced9bd849c67788bc387e3d8bf941a6bfd820c1b47fa1bc",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\xa91c3e0f94effd5475e3ea826a58a96da57bbdea39965d9f35b36338738fb1b6",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(widget,widget,{id},{b9ebd6bb-d737-498d-87f3-44791ad147d6})": {
                    "id": "\\x09731392a154b538e3d7c0d697b79c34a2202bf7cef01f02a9e627ad642842c4",
                    "css": "\\xf5561cfb0a710062a28362c7c8226390176bc4434023b6cd9201a16709b9cfc8",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\x349dc990464bf72ea6f20b74da3bdf7254713f27247b299972b6d841fb2826e7",
                    "name": "\\xbc020a35b7f9cb1382e7b534c68e3c531d849b119bf14f75ddead6cc45c3ccc1",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\x364b09e448e9122afb88076f1ddcf02a1628711a37461b834f3510962871e00f",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(widget,widget,{id},{c9a058d7-816f-4719-9516-515039f4883a})": {
                    "id": "\\x839779136f82e3517c27b1ac56a219b7c7bf47f7be5e43e800f3398b5be1ae35",
                    "css": "\\x8178ae6ac6f0182c3b64737dc423133c15dfce730f67e3b303388af3272670df",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\x0319f1fb332d7c9f192d497b5c577e8d9b1f48eb519cae6355da9090ff567de1",
                    "name": "\\x638ac2e5e63626ab33ca6b3d36a855ec7eafcae1bb3b3504d159072892d962c2",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\x4938388f0c68650a2120ab03dfbf8e39b08edca0d086b3c3fd02e84e501a5fab",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(widget,widget,{id},{d8750749-46ba-411b-8b15-f5e06c845f1c})": {
                    "id": "\\x94483d966b6a0c4167448acfabe47efbb05ae59d68e977d2db91d001ac116a08",
                    "css": "\\x5e411a1d7d1b25fca9378775c4b0bb9085555466cc20ee2584bc97d624a252c0",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\x8c4a55cd627616e21a6e7a9190bd7b42b84174d02158f743552517eb08eece48",
                    "name": "\\xb1b1bdb480c61d075300d9bff7d9cb69cf31695ea048e478facadf426e8d0fb0",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\xa9c9db433a2ebae74468dbfde36af7f65090c94824f7b53c6be1cd287d245e23",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(widget,widget,{id},{e1ced48e-1c93-4af9-8522-c7d1a31408e5})": {
                    "id": "\\x4edaedda78d8053b29df26a82c943e476d352d5db7fd21770212b2b08370dbaf",
                    "css": "\\x0ba9b693da6b2dbb83cee744e953ac5cb5f3d2cb93a4a0550b607a7fdcca02c2",
                    "help": "\\xc0178022ef029933301a5585abee372c28ad47d08e3b5b6b748ace8e5263d2c9",
                    "html": "\\xe4435ae6748a9d88d0c69197adbaf5006323a1591ef3783884c39a4864a56b6b",
                    "name": "\\xc3e2d78f3ff335724b4029f06505b511e4f8f01e258828de29849b36b40b55d0",
                    "pre_js": "\\xe4b08665b2511bc86ca7cf1116f4a4df34ec5c7f0a19329e166cd8a00e862382",
                    "post_js": "\\x080ffad26f829a3705faca863af89a35f851b956c94c4baa76f0b06c03b0a65a",
                    "common_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "server_js": "\\xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                },
                "(endpoint,resource,{id},{00765d47-360b-4ca6-a449-fb72ddead330})": {
                    "id": "\\x6125fb53e2564178f1796bf0429049d5cc220f1fd8f988c28cf58174ccc4b5ee",
                    "path": "\\x7d270f33ce3e58a4baf4c991550bf189eaa80ef6937788542f9a6f30885ab797",
                    "active": "\\xb5bea41b6c623f7c09f1bf24dcae58ebab3c0cdd90ad966bc43a45b44867e12b",
                    "content": "\\x1cd39345d708504047d2acbbee912d43977b63378b73408b54f7b93e7892adc7",
                    "mimetype_id": "\\xdd2741e2734916143a6dbf1d1939cbc04396f10356faf54aba282066cec41b5f"
                },
                "(endpoint,resource,{id},{2923c1fa-4641-4550-b338-888a9135df7c})": {
                    "id": "\\x0dd8fd2db084d3adc9ff3e1a7c9efce463b51228c36eb104ee234ef7ff0d92fe",
                    "path": "\\x6f79a2d3c8c985123450d6e824aed332d689ce921686b8dd87987f9f78dec1d1",
                    "active": "\\xb5bea41b6c623f7c09f1bf24dcae58ebab3c0cdd90ad966bc43a45b44867e12b",
                    "content": "\\x51c80c394df96d89e95a40b0a0416354788a8bef726957678ac619c80c73ab68",
                    "mimetype_id": "\\xcb218518c86e9538f54d6562b2d09a2e8a1fd11dbb99b21c08ab600688c10356"
                }
            },
            "repository_id": "67e2c4b9-235e-4ddf-a943-bfa8dde598bf",
            "merge_parent_id": null
        }
    ],
    "repository": {
        "id": "67e2c4b9-235e-4ddf-a943-bfa8dde598bf",
        "name": "org.aquameta.ui.fsm",
        "head_commit_id": "398d58d8-98fe-4b01-b2a2-e66f1b88222b",
        "stage_rows_to_add": [
        ],
        "checkout_commit_id": "398d58d8-98fe-4b01-b2a2-e66f1b88222b",
        "tracked_rows_added": [
        ],
        "stage_rows_to_remove": [
        ],
        "stage_fields_to_change": [
        ]
    }
}
